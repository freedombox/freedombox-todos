# -*- mode: org; mode: auto-fill; fill-column: 80 -*-

#+TODO: TODO(t) WAIT(w@/!) | DONE(d!) CANCELED(c@)

* Introduction

  This is an integrated TODO list for the FreedomBox project, compiling todos
  from each of the included projects.  Right now, we're trying to finish 1.0.
  The 2.0 and 3.0 TODOs are not yet firm.

  This file lives in a few repositories:

  - https://github.com/NickDaly/freedombox-todos
  - https://gitorious.org/freedombox-todos

** Projects

   This section lists each of the projects tracked in this TODO list along with
   any known repositories for those projects.

*** Freedom Maker

    Freedom Maker (FM) is the central hub of the FreedomBox project, it builds
    and installs the file-system image that turns any computer into a
    FreedomBox.

    Bdale Garbee's master branch is the current root.

    - [[http://anonscm.debian.org/gitweb/?p%3Dfreedombox/freedom-maker.git][Bdale Garbee's Branch]]
    - [[https://github.com/NickDaly/freedom-maker/][Nick Daly's Branch]]

*** Plinth

    Plinth is a web front end for administering every aspect of a Freedom Box.

    Nick Daly's master branch is the current root.

    - [[https://github.com/jvasile/plinth][James Vasile's Branch]]
    - [[https://github.com/NickDaly/plinth][Nick Daly's Branch]]

*** FreedomBuddy

    FreedomBuddy manages service discovery between FreedomBoxes, coordinating
    connections between friendly servers for any service.

    Nick Daly's master branch is the current root.

    - [[https://github.com/NickDaly/freedombuddy][Nick Daly's Branch]]
    - [[https://github.com/tomgalloway/freedombuddy][Tom Galloway's Branch]]
    - [[https://gitorious.org/freedombuddy][Gitorious Project]]

*** FreedomBox Privoxy

    FreedomBox Privoxy filters out privacy threats and advertising for users
    while they browse the Internet.

    James Vasile's master branch is the current root.

    - [[https://github.com/jvasile/freedombox-privoxy][James Vasile's Branch]]
    - [[https://github.com/NickDaly/freedombox-privoxy][Nick Daly's Branch]]
    - [[https://www.gitorious.org/freedombox-privoxy][Gitorious Project]]

*** With SQLite

    With SQLite uses an SQLite database as a dictionary in Python.

    Nick Daly's master branch is the current root.

    - [[https://github.com/jvasile/withsqlite][James Vasile's Branch]]
    - [[https://github.com/NickDaly/withsqlite][Nick Daly's Branch]]

*** Publish

    Publish publishes projects in the simplest ways possible.

    Nick Daly's master branch is the current root.

    - [[https://gitorious.org/project-publish][Nick Daly's Branch]]

*** Key Report

    Mentions keys that will expire soon.

    Nick Daly's master branch is the current root.

    - [[https://gitorious.org/key-report/][Nick Daly's Branch (gitorious)]], [[https://github.com/NickDaly/key-report/][(github)]]

* FreedomBox 1.0 [3/8]

  A dedicated hacker's release.  All the pieces are there, but not necessarily
  integrated as well as they should be.

** TODO Infrastructure [0/1]

*** TODO Start Gluing Pieces Together

    At least some projects should work with Plinth and use the LDAP backend.

** TODO FreedomBuddy [2/5]

*** TODO Finish Basic FreedomBuddy Functionality [0/2]

**** TODO Finish Introduction System

     1. Sender exports public key to file.
     2. Sender exports signed location message to file.
     3. Sender archives both files.
     4. Sender and receiver exchange the archive.
     5. Receiver unpacks the archive.
     6. Receiver imports public key.
     7. Receiver verifies and imports signed location message.

**** TODO Add Default Services [0/3]

     Make a default set of services available to make it easy for folks to start
     hosting services for someone else.  It could be a sort of "add a new user"
     wizard that sets the default services and creates the introduction message
     archive.

     We need to create a "default" key that is loaded into the shelf only when
     the shelf doesn't already contain a default service set.  That service set
     should contain the current default services:

     - http listener
     - http sender
     - http monitor
     - cli monitor

***** TODO Load Default Services

      If default services aren't found in the saved data, they're read from the
      config file.

***** TODO Reject "Default" Key Updates

      The "Default" key is a special, protected, key (maybe 0, maybe "default")
      for which all external service updates are rejected, in the same way the
      "-update-time" service suffix is protected.

***** TODO Copy Default Services when Adding a New Key

      The services you want to host for other people are copied to their service
      list whenever a new key is added.

*** TODO Write FreedomBuddy Threat Model
    :PROPERTIES:
    :Attachments: fbuddy-threat-model
    :ID:       fc7e9d5e-7db7-4b7c-9efa-f5ca23d0eff5
    :END:

    - http://wiki.openitp.org/peerreviewboard:start

    - [[file:data/fc/7e9d5e-7db7-4b7c-9efa-f5ca23d0eff5/fbuddy-threat-model.org][FreedomBuddy Threat Model]]

*** TODO Add Contracts to functions.

    Use PyContract to verify functional contracts.

*** DONE Finish FreedomBuddy UI
    CLOSED: [2013-07-28 Sun 14:12]
    - State "DONE"       from "TODO"       [2013-07-28 Sun 14:12]

*** CANCELED Move ./build dependencies to ../
    CLOSED: [2013-07-28 Sun 14:12]
    - State "CANCELED"   from "TODO"       [2013-07-28 Sun 14:12] \\
      Fixing dependency duplication for FBuddy specifically is worth less
      than moving to .debs, and will break FBuddy for non-FBX installs,
      anyway.

    This'll help unify the dependencies at the file level.

    Might not be worth it, as everything's moving to .debs soon.

** TODO Freedom Maker [2/9]

*** TODO Add LDAP Backend

*** TODO Create target specific /etc/network/interfaces

*** TODO Update the login message to mention passwords and intro file.

*** TODO Write an intro file so users can =less hello=

    This will be the user's crash course to their freedombox.

*** TODO Make Plinth Launch on Startup

    - Make plinth in FM during image build process, or,

    - Build some giant startup script to run Plinth that handles everything:

      - make-ing plinth
      - other requirements

      Plinth's own start.sh should handle its own local installation, nothing
      else.  The big script should probably assume ~/exmachina is available.

*** TODO Add tcp tracker

    #+begin_ascii
      The tracker URL in the torrent file uses UDP, which is not universally
      supported in Debian (bug #638194).
    #+end_ascii

*** TODO Add RaspberryPi target

**** Notes

***** [2013-06-30 Sun]

      - [[https://github.com/asb/spindle][Spindle]] :: spindle is a set of scripts to aid building and working on a
           distribution image.

           I'm not crazy about this, it downloads blobs like:

           http://asbradbury.org/tmp/raspi/simple-root-filesystem-armv6l.tar.bz2
           http://asbradbury.org/tmp/raspi/system-image-armv6l.tar.bz2
           http://asbradbury.org/tmp/raspi/dropbearmulti-armv6l

      - [[http://www.aclevername.com/articles/linux-xilinx-tutorial/minimalist-initramfs.html][Minimalist Initramfs]] :: Instructions on building an initramfs.  Neato.

      - [[http://www.raspbian.org/RaspbianDocumentation][Raspbian Documentation]] :: Good link list.

      - [[https://github.com/Hexxeh/rpi-firmware][RaspberryPi Firmware]] :: ~60 MB Compiled Kernel + Firmware Blob.

           Confusing: both GPL and not-GPL.  The copy of the GPL comes with an
           interesting Linus-disclaimer.  No source available?

***** [2013-07-20 Sat]

      Lost my RPi.  I have the SD card and the power cord, but not the Pi itself.
      This makes testing difficult.  Where the fuck did I put it?  Guess I buy a
      new one?  Will do that tomorrow.

**** Communications

***** [2013-06-30 Sun]

****** DONE Write Alex Bradbury <asb@asbradbury.org>
       CLOSED: [2013-06-30 Sun 14:54]

****** DONE Write Mike Thompson <mpthompson@gmail.com>
       CLOSED: [2013-06-30 Sun 14:58]

*** DONE Merge Freedom Maker Shiny into Master

*** CANCELED Move /var and /home to external SD card?
    CLOSED: [2013-07-27 Sat 20:53]
    - State "CANCELED"   from "TODO"       [2013-07-27 Sat 20:53]

    Not every device supports external storage anyway...  Just use a bigger
    card.

** TODO Documentation [0/1]

*** TODO Write Developer Documentation

    Take the current state of the FBX and write up how to use all the parts
    together.

** TODO VPN Support [0/2]

   When available, FreedomBoxes will construct VPNs to communicate between one
   another.  It seems unlikely that all these VPNs will form a single, large,
   network but, rather, that each FreedomBox will construct its own VPN network
   by which it can reach all of its trusted peers.  This should help to prevent
   non-mutually trusted peers from seeing one another and leaking the
   social/network graph.

   When VPNs aren't available, FreedomBuddy can still be used to create direct
   connections over arbitrary networks.  However, this is less desirable as it
   doesn't abstract away the network protocol and reqiures each application to
   be able to use the protocol.  For example, if your browser doesn't understand
   how to handle the webserver at gnunet://00000000, you're out of luck.  There
   is still the option of just communicating directly over FreedomBuddy, but
   that's a really roundabout way of doing things.

   We should include a VPN system.  OpenSwan, Tinc, and librevpn appear to be
   options.

*** TODO Include OpenSwan

    James recommended OpenSwan over the similar StrongSwan.

*** TODO Include Tinc [0/1]

**** TODO Validate Tinc's Suitability [0/4]

     - [ ] Can Tinc work, now? :: Yes/No

     - [ ] Can Tinc work, ever? :: Yes/No

     - [ ] Unpatched Tinc Problems :: (list)

     - [ ] Patched Tinc Problems :: (list)

***** [2013-08-13 Tue] Nick Daly

      Yes, Tinc has [[http://www.tinc-vpn.org/security/][problems]], but they seem to be resolvable or ignorable:

      #+begin_quote
        James Vasile:

        As for those security points, we could address them and ship our own
        Tinc that is incompatible with existing Tinc.  Going off of the
        problems listed at http://www.tinc-vpn.org/security/ I see a
        relatively easy fixes.

        1. Randomize the IV for each packet.

        2. Increase default HMAC length or just config it to be longer.

        3. We could add padding in RSA.  And there are easily-implemented
           techniques for defending against RSA timing attacks.

        4. The Auth Protocol problem doesn't look worth fixing to me.  In
           paractice that's a DOS attack unless I'm missing something.

        The cost of these is dev time and a little on the performance side.

        But we can ship Tinc as-is and fix those points over time.  Tinc is
        rather good security for now.

      #+end_quote

***** [timestamp] (user)

** DONE Plinth [6/6]
   CLOSED: [2013-09-29 Sun 18:15]
   - State "DONE"       from "TODO"       [2013-09-29 Sun 18:15]

*** DONE Provide CherryPy through Apache
    CLOSED: [2013-09-29 Sun 18:14]
    - State "DONE"       from "TODO"       [2013-09-29 Sun 18:14]

*** DONE Don't POST password... EVER.
    CLOSED: [2013-09-29 Sun 18:14]
    - State "DONE"       from "TODO"       [2013-09-29 Sun 18:14]

    We currently post on login fails.

    Now irrelevant, as Plinth is behind HTTPS.

*** DONE CherryPy HTTPRedirects Shouldn't Go To 127.0.0.1
    CLOSED: [2013-09-29 Sun 18:15]
    - State "DONE"       from "TODO"       [2013-09-29 Sun 18:15]

    They shouldn't change the server's name.

    Fixed by putting CherryPy behind Apache.

*** DONE Include missing dependencies. [4/4]
    CLOSED: [2013-09-08 Sun 14:59]
    - State "DONE"       from "TODO"       [2013-09-08 Sun 14:59]
    - State "DONE"       from "TODO"       [2013-07-28 Sun 20:14]

    - [X] psmisc
    - [X] python2.7
    - [X] libpython2.7
    - [X] sudo

*** DONE Move /build to /vendor
    CLOSED: [2013-07-28 Sun 20:15]
    - State "DONE"       from "TODO"       [2013-07-28 Sun 20:12]

    Do it for consistency with freedombox-privoxy and freedom-maker.

    Update references in:

    - plinth/start.sh
    - plinth/Makefile

*** CANCELED Move ./build dependencies to ../
    CLOSED: [2013-07-28 Sun 14:12]
    - State "CANCELED"   from "TODO"       [2013-07-28 Sun 14:12] \\
      Fixing dependency duplication for FBuddy specifically is worth less
      than moving to .debs, and will break FBuddy for non-FBX installs,
      anyway.

    This'll help unify the dependencies at the file level.

    Might not be worth it, as everything's moving to .debs soon.

** DONE Key Report [1/1]
   CLOSED: [2013-08-01 Thu 22:13]
   - State "DONE"       from "TODO"       [2013-08-01 Thu 22:13]

*** DONE Create Key/Cert Expiry Reporting Tools
    CLOSED: [2013-08-01 Thu 22:13]
    - State "DONE"       from "TODO"       [2013-08-01 Thu 22:13]

    [[file:key-report/key-report.py]]

** CANCELED ExMachina [1/1]
   CLOSED: [2013-10-06 Sun 21:36]

*** CANCELED Security Audit / Hammer Away at ExMachina
    CLOSED: [2013-10-06 Sun 21:36]

* FreedomBox 2.0 [1/7]

  Generally Useful, includes service configuration and UI polish.

  Infrastructure packages should be available in Debian Testing.

** TODO Plinth [1/11]

   Integrate more services.

*** DONE Produce Plinth Debian Package
    CLOSED: [2013-10-06 Sun 21:34]
    - State "DONE"       from "TODO"       [2013-10-06 Sun 21:34]

    See freedombox-privoxy's "make_deb.sh".

*** TODO Integrate OONI

*** TODO Integrate Tor

*** TODO Integrate Blog

*** TODO Integrate Wiki

*** TODO Integrate Friendica

*** TODO Integrate FreedomBuddy

*** TODO Add MAC Changer to Plinth

    Bounce any/all active interfaces to come up with new MAC addresses.

*** TODO Use Publish to publish Plinth's Source

    That'd be useful and convenient, but should exclude the data directory.

*** TODO Start Community Heartbeat Support

    Boxes should be able to ping other boxes for health information about their
    mutual connections and other data.  Boxes could run tests on other boxes to
    make sure they're still in one piece and send out communal alerts when a box
    is found to be failing ("Alice has a bad network connection," "Bob's sending
    out malware!").

    Might be broken out into a separate heartbeat project.

*** TODO Integrate Tinc into Plinth [0/1]

**** TODO Tinc Testing

     http://www.vanheusden.com/linux/tinc_mini_howto.html

** TODO FreedomBuddy [0/6]

*** TODO Finish FreedomBuddy UI

*** TODO Move ./build dependencies to ../

    This'll help reduce dependency duplication.

    Might not be worth it, as everything's moving to .debs soon, anyway.

*** TODO Create Debian Package

*** TODO Split Message Parsing per Message Type

    This will allow FBuddy to handle multiple encryption schemes.

*** TODO Split Database Saving/Loading Code into Separate Module

    Move the db code into /src/db/(modulename).py.

    This'll allow us to support multiple database backends that we can
    preferentially check for data.  LDAP first, shelf second, etc.

*** TODO Add LDAP database backend

** TODO FreedomMaker [2/6]

*** TODO Add fbx to /etc/sudoers?

*** TODO Replace Spinifex Firmware with Libertas-fw package.

*** DONE Debian-Package Freedom Maker
    CLOSED: [2013-10-06 Sun 21:35]
    - State "DONE"       from "TODO"       [2013-10-06 Sun 21:35]

*** TODO Novena Support

    Must be bumped if Novena unavailable.

*** TODO Get JWChat working. [0/2]

**** TODO Suppport local server connections.

     Can clients on the local server exchange messages?

**** TODO Suppport server connections.

     Can cilents on the local server exchange messages with remote clients?

*** CANCELED Add "get the wheezy signing key" to FM's README
    CLOSED: [2013-08-13 Tue 07:46]
    - State "CANCELED"   from "TODO"       [2013-08-13 Tue 07:46] \\
      Now that Wheezy's Stable, this is done automagically.

** TODO Key Report [0/2]

*** TODO Automatically write emails for critical and warning keys.

*** TODO Package Key Report

** TODO Infrastructure [0/5]

*** TODO Use FreedomBuddy and/or Tinc to connect all services.

*** TODO Glue Pieces Together

*** TODO Deliver FreedomBox Debian Package

*** TODO Improve GNUTLS

*** TODO Improve Firefox to handle PGP-certified-X509-certs

** TODO Documentation [0/4]

*** TODO Clarify Authentication vs Authorization in the System

*** TODO Clean up FBF Wiki

*** TODO Coordinate End User Documentation

*** TODO Update FBF.org Style for Butterfly Logo

** CANCELED ExMachina [1/1]
   CLOSED: [2013-10-06 Sun 21:35]

*** CANCELED Package ExMachina
    CLOSED: [2013-10-06 Sun 21:35]

* FreedomBox 3.0 [0/0]

  A generally usable consumer device.

  Viable upgrade paths must exist between 2.0 and 3.0.

* Unscheduled [0/0]

  These todo items aren't currently scheduled for any milestone.

** FreedomMaker

*** TODO Unify VirtualBox and Image Build Systems

    The VBox image and filesystem image have completely separate dependency
    lists.  That is bad.  Both images should pull in the same list of
    dependencies to make sure they're functionally equivalent.

    We'll need to parse the single dependency list for each image separately and
    pass those to the dependency-getter (apt-get in one case, --package in the
    other).  Unifying other pieces is also nice, but this is the most important.

*** TODO Make Freedom Maker Smarter

    Do a better job of abstracting away devices into configuration options.  For
    example, if we're building for a DreamPlug target, we should enable the
    blink-blinkenlights option: the DreamPlug has LEDs we can use to signal to
    the user), but that should be disabled for a RaspberryPi, as that
    functionality isn't available at best (and might cause undefined behavior in
    the Pi at worst).

    Break out devices by type:

    1. DreamPlug v1
    2. RaspberryPi
    3. VirtualBox Image

*** TODO Improve USB Formatting [1/2]

**** CANCELED Add usb formatting to FM's README
     CLOSED: [2013-07-27 Sat 20:31]
     - State "CANCELED"   from "TODO"       [2013-07-27 Sat 20:31] \\
       If parted handles the image, we can simplify formatting a lot.

**** TODO Move from USB image to .img with parted.

     Parted's really useful.  This means we can forego using a USB device and
     not need to mess with /etc/fstab at all.

     [[file:freedom-maker/Makefile::image:%20$(STAMP)-rootfs-$(ARCHITECTURE)][file:freedom-maker/Makefile::image: $(STAMP)-rootfs-$(ARCHITECTURE)]]

* Theory [0/1]

  These items need to be thought about more.

** TODO Think about trust ratings

   Services can announce how much faith they have in each peer for any
   particular purpose.  That'd be neat.

   For example, if a service starts receiving updates from a peer that
   have future time-stamps, it should signal that the peer has a screwy
   clock.
